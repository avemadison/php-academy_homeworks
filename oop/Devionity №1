<?php
/*1.Создать класс User со свойствами login, password, email, rating. По умолчанию значение рейтинга задать нулевым.
2.Создать класс Car. Записать в этот класс свойства brand, model, year, driver. Создать экземпляры машин Toyota Corolla (2000), 
Mazda 6 (2015), Ford Taurus (1995). Создать экземпляры класса User для нескольких пользователей системы.
В свойство driver объектов класса Car записать объекты класса User. 
Вывести объекты класса Car на экран при помощи var_dump(), print_r() 
3. Для класса User из предыдущего занятия создать методы login(), logout(), которые просто выводят на экран соответствующее сообщение. 
Создать экземпляр класса, вызвать созданные методы.
4. В класс Car из предыдущих заданий добавить методы showBrand(), showModel() которые выводят на экран значения свойств brand, model 
соответственно. В класс User из предыдущих заданий добавить свойство isLogged, которое принимает true, если пользователь успешно
авторизировался, и false при выходе из системы. Задать значения для этого свойства в методах login(), logout().
5. В класс Car из предыдущих заданий добавить private свойство price, а также публичные геттер и сеттер для него. 
Геттер должен зависеть от одного параметра. В зависимости от того, было ли в функцию геттера передано true, выводить отформатированную 
цену, либо же в обычном виде (использовать функцию number_format). Сеттер должен приводить входящий параметр к числу, у которого не 
более 2 знаков после запятой (использовать round).
6. Унаследовать от класса Car из предыдущих занятий класс WaterCar со свойством waterSpeed.
7.В класс Car добавить конструктор, который выводит сообщение Car created при создании нового экземпляра класса.
8.Добавить магические методы __get, __set для закрытых свойств, которые будут возвращать / присваивать соответствующие значения.*/
class User
{
    public $login;
    public $password;
    public $email;
    public $rating = 0;
    public $isLogged;
    
    public function __get($name)
  {
    if(isset($this->name))
    {
        return $this->name;
    }
  }
  
   public function __set($name, $value)
  {
    $this->name = $value;
  }
  
    public function login()
    {
        $this->isLogged = true;
        echo 'Login';
    }

    public function logout()
    {
        $this->isLogged = false;
        echo 'Logout';
    }
}
$mike = new User;
$chester = new User;
$max = new User;

$mike->login = 'Mike';
$mike->password = 12345;
$mike->email = 'mikedriv@gmail.com';

$chester->login = 'Chester';
$chester->password = 78096;
$chester->email = 'chesdriv@rambler.ru';

$max->login = 'Max';
$max->password = 54687;
$max->email = 'maxdriv@mail.ru';

class Car
{
    public $brand;
    public $model;
    public $year;
    public $driver;
    private $price;

    public function __construct()
    {
        echo 'Car created';
    }

    public function setPrice($param)
    {
        return $this->price = round($this->price = $param, 2);
    }

    public function getPrice($a = true)
    {
        if($a){
            return number_format($this->price, 2,'.',' ');
        }
        else {
            return $this->price;
        }
    }
    public function showBrand()
    {
        echo $this->brand;
    }

    public function showModel()
    {
        echo $this->model;
    }
}

class WaterCar extends Car
{
    public $waterSpeed;
}

$car1 = new Car;
$car2 = new Car;
$car3 = new Car;

$car1->brand = 'Toyota';
$car1->model = 'Corolla';
$car1->year = 2000;
$car1->driver = $mike;


$car2->brand = 'Mazda';
$car2->model = 6;
$car2->year = 2015;
$car2->driver = $chester;

$car3->brand = 'Ford';
$car3->model = 'Taurus';
$car3->year = 1995;
$car3->driver = $max;

echo '<pre>';
var_dump($car1);
var_dump($car2);
var_dump($car3);

echo '<pre>';
print_r($car1);
print_r($car2);
print_r($car3);

/*Создать массив, который описывает сообщение ключами name, email, message с соответствующими значениями. 
Привести массив к объекту. Проанализировать результат при помощи var_dump.*/
$array = ['name' => 'Chester', 'email' => 'chesdriv@rambler.ru', 'massage' => 'Hello everybody'];
$obj = (object)$array;
var_dump($obj);
